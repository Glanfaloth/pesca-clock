{"version":3,"sources":["components/TimerLengthControl.js","App.js","reportWebVitals.js","index.js"],"names":["TimerLengthControl","length","onClick","title","className","value","size","Timer","useState","brkLength","setBrkLength0","seshLength","setSeshLength0","timerState","setTimerState","timerType","setTimerType","timer","setTimer","intervalID","setIntervalID","color","alarmColor","setAlarmColor","lengthControl","stateToChange","sign","currentLength","timerType1","timerControl","beginCountDown","cancel","fn","time","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","accurateInterval","t","timer1","_timer","switchTimer","phaseControl","num","str","e","currentTarget","style","id","minutes","Math","floor","seconds","clockify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9923276.chunk.js","sourcesContent":["import React from \"react\";\nimport {AiOutlineArrowDown, AiOutlineArrowUp} from \"react-icons/ai\";\n\nexport default function TimerLengthControl({\n  length,\n  onClick,\n  title,\n}) {\n  return (\n    <div className=\"length-control\">\n      <div>{title}</div>\n      <button className=\"btn-level\" onClick={onClick} value=\"-\">\n        <AiOutlineArrowDown size={40} />\n      </button>\n      <div className=\"btn-level\">\n        {length}\n      </div>\n      <button className=\"btn-level\" onClick={onClick} value=\"+\">\n        <AiOutlineArrowUp size={40}/>\n      </button>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TimerLengthControl from \"./components/TimerLengthControl\";\nimport { BsPlayFill } from \"react-icons/bs\";\nimport { BiPause, BiRefresh } from \"react-icons/bi\";\n\nconst accurateInterval = function (fn, time) {\n  var cancel, nextAt, timeout, wrapper;\n  nextAt = new Date().getTime() + time;\n  timeout = null;\n  wrapper = function () {\n    nextAt += time;\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return fn();\n  };\n  cancel = function () {\n    return clearTimeout(timeout);\n  };\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n  return {\n    cancel: cancel\n  };\n};\nexport default function Timer() {\n  const [brkLength, setBrkLength0] = useState(5);\n  const [seshLength, setSeshLength0] = useState(25);\n  const [timerState, setTimerState] = useState(\"stopped\");\n  const [timerType, setTimerType] = useState(\"Session\");\n  const [timer, setTimer] = useState(1500);\n  const [intervalID, setIntervalID] = useState(\"\");\n  const [alarmColor, setAlarmColor] = useState({ color: \"white\" });\n  function setBrkLength(e) {\n    lengthControl(\"brkLength\", e.currentTarget.value, brkLength, \"Session\");\n  }\n  function setSeshLength(e) {\n    lengthControl(\"seshLength\", e.currentTarget.value, seshLength, \"Break\");\n  }\n  function lengthControl(stateToChange, sign, currentLength, timerType1) {\n    if (timerState === \"running\") {\n      return;\n    }\n    if (sign === \"-\" && currentLength !== 1) {\n      stateToChange === \"brkLength\"\n        ? setBrkLength0(currentLength - 1)\n        : setSeshLength0(currentLength - 1);\n      timerType !== timerType1 && setTimer(currentLength * 60 - 60);\n    } else if (sign === \"+\" && currentLength !== 60) {\n      stateToChange === \"brkLength\"\n        ? setBrkLength0(currentLength + 1)\n        : setSeshLength0(currentLength + 1);\n      timerType !== timerType1 && setTimer(currentLength * 60 + 60);\n    }\n  }\n  function timerControl() {\n    if (timerState === \"stopped\") {\n      beginCountDown();\n      setTimerState(\"running\");\n    } else {\n      setTimerState(\"stopped\");\n      if (intervalID) {\n        intervalID.cancel();\n      }\n    }\n  }\n  function beginCountDown() {\n    setIntervalID(\n      accurateInterval(() => {\n        decrementTimer();\n        phaseControl();\n      }, 1000)\n    );\n  }\n  function decrementTimer() {\n    setTimer((t) => t - 1);\n  }\n  function phaseControl() {\n    let timer1 = timer;\n    warning(timer1);\n    if (timer1 < 0) {\n      if (intervalID) {\n        intervalID.cancel();\n      }\n      if (timerType === \"Session\") {\n        beginCountDown();\n        switchTimer(brkLength * 60, \"Break\");\n      } else {\n        beginCountDown();\n        switchTimer(seshLength * 60, \"Session\");\n      }\n    }\n  }\n  function warning(_timer) {\n    if (_timer < 61) {\n      setAlarmColor({ color: \"#a50d0d\" });\n    } else {\n      setAlarmColor({ color: \"white\" });\n    }\n  }\n\n  function switchTimer(num, str) {\n    setTimer(num);\n    setTimerType(str);\n    setAlarmColor({ color: \"white\" });\n  }\n  function clockify() {\n    let minutes = Math.floor(timer / 60);\n    let seconds = timer - minutes * 60;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return minutes + \":\" + seconds;\n  }\n  function reset() {\n    setBrkLength0(5);\n    setSeshLength0(25);\n    setTimerState(\"stopped\");\n    setTimerType(\"Session\");\n    setTimer(1500);\n    setIntervalID(\"\");\n    setAlarmColor({ color: \"white\" });\n    if (intervalID) {\n      intervalID.cancel();\n    }\n  }\n  return (\n    <div>\n      <div className=\"main-title\">Pesca</div>\n      <TimerLengthControl\n        length={brkLength}\n        onClick={setBrkLength}\n        title=\"Break Length\"\n      />\n      <TimerLengthControl\n        length={seshLength}\n        onClick={setSeshLength}\n        title=\"Session Length\"\n      />\n      <div className=\"timer\" style={alarmColor}>\n        <div className=\"timer-wrapper\">\n          <div id=\"timer-label\">{timerType}</div>\n          <div id=\"time-left\">{clockify()}</div>\n        </div>\n      </div>\n      <div className=\"timer-control\">\n        {timerState === \"stopped\" ? (\n          <BsPlayFill size={80} onClick={timerControl} />\n        ) : (\n          <BiPause size={80} onClick={timerControl} />\n        )}\n        <BiRefresh size={80} onClick={reset} />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Timer from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <Timer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}